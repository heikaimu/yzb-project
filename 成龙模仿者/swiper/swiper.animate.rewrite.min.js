/*
 * @Description: 新增了一个属性“swiper-no-hidden”的判断，如果有该属性则初始化和结束之后依然显示，以此解决图片在添加动画后，切换的时候有白屏以及没有渐变切换效果的问题
 * @Autor: Yaowen Liu
 * @Date: 2020-05-29 11:12:02
 * @LastEditors: Yaowen Liu
 * @LastEditTime: 2020-05-29 13:17:23
 */ 
function swiperAnimateCache(a) {
  for (j = 0; j < a.slides.length; j++) for (allBoxes = a.slides[j].querySelectorAll(".ani"), i = 0; i < allBoxes.length; i++) allBoxes[i].attributes["style"] ? allBoxes[i].setAttribute("swiper-animate-style-cache", allBoxes[i].attributes["style"].value) : allBoxes[i].setAttribute("swiper-animate-style-cache", " "),
  allBoxes[i].attributes["swiper-no-hidden"] ? allBoxes[i].style.visibility = "visible" : allBoxes[i].style.visibility = "hidden"
}
function swiperAnimate(a) {
  clearSwiperAnimate(a);
  var b = a.slides[a.activeIndex].querySelectorAll(".ani");
  for (i = 0; i < b.length; i++) b[i].style.visibility = "visible",
  effect = b[i].attributes["swiper-animate-effect"] ? b[i].attributes["swiper-animate-effect"].value: "",
  b[i].className = b[i].className + "  " + effect + " " + "animated",
  style = b[i].attributes["style"].value,
  duration = b[i].attributes["swiper-animate-duration"] ? b[i].attributes["swiper-animate-duration"].value: "",
  duration && (style = style + "animation-duration:" + duration + ";-webkit-animation-duration:" + duration + ";"),
  delay = b[i].attributes["swiper-animate-delay"] ? b[i].attributes["swiper-animate-delay"].value: "",
  delay && (style = style + "animation-delay:" + delay + ";-webkit-animation-delay:" + delay + ";"),
  b[i].setAttribute("style", style)
}
function clearSwiperAnimate(a) {
  for (j = 0; j < a.slides.length; j++) for (allBoxes = a.slides[j].querySelectorAll(".ani"), i = 0; i < allBoxes.length; i++) allBoxes[i].attributes["swiper-animate-style-cache"] && allBoxes[i].setAttribute("style", allBoxes[i].attributes["swiper-animate-style-cache"].value),
  allBoxes[i].attributes["swiper-no-hidden"] ? allBoxes[i].style.visibility = "visible" : allBoxes[i].style.visibility = "hidden",
  allBoxes[i].className = allBoxes[i].className.replace("animated", " "),
  allBoxes[i].attributes["swiper-animate-effect"] && (effect = allBoxes[i].attributes["swiper-animate-effect"].value, allBoxes[i].className = allBoxes[i].className.replace(effect, " "))
}